## Internal vs External "Controlller"

- We could use a dedicated motor controller/microcontroller for the motor & charging operation
- and one for the LED stuff

Pros of seperate: End-hacker (user) can mess around with display controller without fucking up motor control (needs precise timing) or even worse charging
Cons of seperate: cost, programming time

- Or, one powerful microcontroller for everything
Pros of one: Cheap BOM, cheap programming
Cons of one: timing constraints

- Middle ground would be using a microcontroller with dedicated peripherals that can do the hard work of charging and timing. (Maybe PIO, or dual core stuff)

### External controller options
- Could hypothetically use a simple SOT-23-6 IC like the AH9485/86 if single phase turns out to be enough. After all, we're only going around 30hz on the coils, or 600 RPM - mayyyybe double that speed, quadruple the control rate. so assume 200hz control signals.
- At 8 ohms between terminals (2 coils/phase, 2 phases in series), we may not need current limiting at 5V. Just simple PWM ought to be enough to keep it from getting too hot.
- Whether or not single coil works depends heavily on torque charecteristics right now.

## Commutation methods

Watch this video by TI: https://www.youtube.com/watch?v=InzXA7mWBWE

Basically, I should use trapezoidal control AND hall sensors right now. Hypothetically, since the use case for this spinner involves the user "kickstarting" the spinner and then maintaining speed, it is totally practical for us to use sensorless control. The question is, how much BEMF will be generated (Carl Bugeja said PCB motors are weird compared to normal ones) and will a normal ADC be able to detect that. For a prototype v1, I'll use a set of 3 half bridges, 3 hall sensors, and connect the coils to ADC pins to have unlimited control over sensored/sensorless. Researched out of the box controllers (ones from TI and ROHM as recommended by Bugeja), but right now I want the most flexibility and minimum cost, so I'll stick to a mcu.

I could do fancier, more efficient control algorithms, but don't want to prematurely optimize anything.

## Power supply

Ideally I want to run under 5V, so I can use supercaps in parallel. However, there is an advantage to higher voltage systems (other than just motor performance). If the system voltage is 35V to 3V (buck converter), and single caps (5V) are in parallel, we are using a 2V range (3/5 of the energy is locked up). If 6 are in series, we are using 30 - 3, 27V range (3/30 is locked up). HOWEVER, that might require balancing for safety (simple balance w/ an op amp). So, it's more advantageous for v1 (NO PREMATURE OPTIMIZATIONS) to stay at 6 parallel (2 on both sides of each arm), and design a 5V to 2V system.

According to this dimension engine calculation,  t = 8.5 min. The system can run continuously for 10 minutes. The hard part is finding 10F 5V cap that's small enough to fit in here. There's like this: MAL219691214E3, but it's $7 PER so $42 per device, clearly infeasible. IDK TBH. Hopefully my actual average current consumption is significantly smaller.

```math
v = 5Volt - 3.3Volt
c = 6 * 15Farad
q = c*v
t = q/300mA; min
```

Since the charging rate for these 15F caps is 50mA, w/ 6 caps, 300mA. That's slower than a 400mA lipo cell at 1C. As much as I like supercaps, 400mA lipo cell might be the move: it can run them same thing for an HOUR. More complex charging, but the engineering design process has made its decision. No supercaps ðŸ˜­

```
[ 5 ] energy_needed = 300mA * 5V * 60min; joule
     energy_needed = 5400 joule

[ 6 ] energy_needed / 3.7V; milliamp*hour
     = 405.405 milliamp*hour
```

## Searching for appropriate batteries:

25.4mm is the appropriate diameter for an outer spinner lobe.
LIR2025s are too low power.
LIR2032s??
6x LIR1654 in parallel?

## Core motor design

### Coil part (rotor)

- Ordered a basic 3 phase, 8 loop design made with Kimotor, fits in a 25.4mm circle.

### Stator design

v0 compatible: first try purely 3d printed (no bearings) w/ chessbot magnets (10mm dia, 1.8mm thick).


## Experiments
### Experiment 1

The initial goal is to ask: does it spin at all? This test will spin the magnets part cuz obviously the coil part needs wires. Eventually, the coil part will be free spinning and self-powered.
Use v0 coil board w/ 3d printed stator. L298N? board to control.

### Experiment 2

Spin magnet part and hook up coils to oscilloscope. Measure BEMF generated when spinning magnet part with my electric screwdriver (nom. 300RPM). 300RPM could be the lower limit of this device and it'll be totally fine (ChatGPT said it's the average range, TODO measure myself).
